def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent {
    kubernetes {
      label 'kubectl'
      yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
      """
    }
  } 
  triggers {
    eventTrigger jmespathQuery("action=='created' && installation.app_slug=='cloudbees-feature-management-ws'")
  } 
  environment {
    WORKSHOP_ATTENDEES_PASSWORD = credentials('workshop-attendees-password')
    BEEDEMO_DEV_PAT = credentials('beedemo-dev-github-pat')
    GITHUB_WEBHOOK_SECRET = credentials('github-webhook-secret')
    TARGET_TYPE = event.installation.target_type.toString()
    GitHubApp = event.installation.app_slug.toString()
    GitHubAppId = event.installation.app_id.toString()
    GitHubOrganization = event.installation.account.login.toString().replaceAll(" ", "-")
    GitHubUsername = event.sender.login.toString()
    controllerFolder = GitHubOrganization.toLowerCase()
    controllerName = "controller"
    bundleName = "${controllerFolder}-${controllerName}"
    workshopId = "cloudbees-fm-workshop"
    WEBHOOK_BASE_URL = "$ENVIRONMENT_PREFIX"+"cbci.workshop.cb-sa.io"
    AVAILABILITY_PATTERN = "${GitHubApp}/${controllerFolder}/${controllerName}"
  }
  stages {
    stage('Using GitHub User instead of Org') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
        environment name: 'TARGET_TYPE', value: 'User'
      }
      steps {
        echo "installation.account.login:${GitHubOrganization}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        error "GitHub target type (should be Organization): ${TARGET_TYPE}"
      }
    }
    stage('Provision Managed Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
        environment name: 'TARGET_TYPE', value: 'Organization'
      }
      steps {
        echo "GitHub target type (should be Organization): ${TARGET_TYPE}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "smee filter -- installation.account.login:${GitHubOrganization}"
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "sed -i \"s/REPLACE_BASE_CREDENTIAL_ID/cloudbees-feature-flags-workshop-github-app/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh """
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            """
        }
        withCredentials([usernamePassword(credentialsId: "${GitHubOrganization}",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: """
          curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' https://api.github.com/repos/${GitHubOrganization}/controller
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' https://api.github.com/repos/${GitHubOrganization}/pipeline-library
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' https://api.github.com/repos/${GitHubOrganization}/pipeline-policies
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' https://api.github.com/repos/${GitHubOrganization}/microblog-frontend
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' https://api.github.com/repos/${GitHubOrganization}/insurance-frontend
            sleep 5
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}'  \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/cloudbees-ci-config-bundle/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"controller"}'
                 
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-library/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-library"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-template-catalog/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-template-catalog"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/microblog-frontend/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"microblog-frontend"}'
          """)
          
          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: """
            rm -rf ./controller || true
            rm -rf ./insurance-frontend || true
            rm -rf ./pipeline-template-catalog || true
            mkdir -p controller
            mkdir -p microblog-frontend
            mkdir -p pipeline-template-catalog
            
            cd pipeline-template-catalog
            git init
            git config user.email "cloudbees-ci.bot@cloudbees.com"
            git config user.name "CloudBees CI Bot"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/pipeline-template-catalog.git
            
            git checkout -b main
            git pull origin main
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" templates/pipeline-policies/Jenkinsfile
            git commit -a -m 'updating pipeline-template-catalog bundle for'
            git push -u origin main
          """)
          
          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/microblog-frontend/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''
            cd microblog-frontend
            git init
            git config user.email "$GitHubUsername@workshop.cb-sa.io"
            git config user.name "$GitHubOrganization"
            git remote add origin https://x-access-token:$GITHUB_ACCESS_TOKEN@github.com/$GitHubOrganization/microblog-frontend.git
            git pull origin main
            git checkout main
            sed -i "s/REPLACE_GITHUB_ORG_LOWERCASE/$controllerFolder/g" git-repo.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" git-repo.yaml
            git add *
            git push origin main
            
            git checkout -B development
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/package.json > package.json
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/public/index.html > public/index.html
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/src/components/NavMenu.vue > src/components/NavMenu.vue
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/src/utils/flags.js > src/utils/flags.js
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/src/views/Posts.vue > src/views/Posts.vue
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/.vuejs > .vuejs
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/.env.development > .env.development
            curl https://raw.githubusercontent.com/cloudbees-days/microblog-frontend/development/.env.production > .env.production
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" .env
            git add *
            git add .vuejs
            git commit -a -m 'creating microblog-frontend development branch'
            git push -u origin development
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
                 --data '{"title":"New Feature","head":"development","base":"main"}' \
                 https://api.github.com/repos/${GitHubOrganization}/microblog-frontend/pulls

            curl --silent --output /dev/null --show-error \
              -X POST \
              -H 'Accept: application/vnd.github+json' \
              -H "Authorization: Bearer $GITHUB_ACCESS_TOKEN" \
              https://api.github.com/repos/${GitHubOrganization}/microblog-frontend/hooks \
              -d '{"name":"web","active":true,"events":["push","pull_request","issue_comment","deployment","deployment_status","repository"],"config":{"url":"'"https://webhook.${ENVIRONMENT_PREFIX}previews.workshop.cb-sa.io/"'","content_type":"json","insecure_ssl":"0"}}'
            
          ''')
          
          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/controller/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''
            cd controller
            git init
            git config user.email "cloudbees-ci.bot@cloudbees.com"
            git config user.name "CloudBees CI Bot"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/controller.git
            
            git checkout -b main
            git pull origin main
            
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbfm-workshop/controller.yaml > controller.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" controller.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" controller.yaml
            sed -i "s/REPLACE_FOLDER_NAME/$controllerFolder/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP_ID/$GitHubAppId/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" controller.yaml
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" controller.yaml
            
            cd bundle
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbfm-workshop/bundle/bundle.yaml > bundle.yaml 
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml            
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml
            
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbfm-workshop/bundle/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbfm-workshop/plugin-catalog.yaml > plugin-catalog.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbfm-workshop/plugins.yaml > plugins.yaml
            mkdir items || true
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbfm-workshop/bundle/items/pipelines.yaml > items/pipelines.yaml  
            
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbfm-workshop/bundle/variables.yaml > variables.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" variables.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" variables.yaml
            
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jenkins.yaml
            git add *
            git commit -a -m 'updating controller bundle'
            git push origin main
            cd ..

           curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                -H "authorization: Bearer ${GITHUB_ACCESS_TOKEN}" \
                https://api.github.com/orgs/${GitHubOrganization}/hooks \
                --data '{"name":"web","config":{"url":"'"https://${ENVIRONMENT_PREFIX}cbci.workshop.cb-sa.io/hibernation/ns/controllers/queue/${controllerFolder}-${controllerName}/github-webhook/"'","content_type":"json","secret":"$GITHUB_WEBHOOK_SECRET","insecure_ssl":"0"},"events": ["check_run","check_suite","create","delete","push","pull_request","repository"]}'
          ''')
          script {
            env.INVITE_ID = sh(script: ''' 
                curl -X PUT \
                  -H 'Accept: application/vnd.github+json' \
                  -H "Authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                  https://api.github.com/repos/$GitHubOrganization/insurance-frontend/collaborators/beedemo-dev \
                  -d '{"permission":"admin"}' \
                | jq -r '.id' | tr -d '\n' 
              ''', returnStdout: true)
          }

        }
        echo "INVITE_ID = $INVITE_ID"
        sh 'echo $INVITE_ID'
        
        sh '''
          curl --silent --output /dev/null --show-error \
            -X PATCH \
            -H 'Accept: application/vnd.github+json' \
            -H "Authorization: Bearer $BEEDEMO_DEV_PAT" \
            https://api.github.com/user/repository_invitations/$INVITE_ID
        '''
        
        echo "creating config bundle on OC"
        container('kubectl') {
          sh "rm -rf ./${bundleName}"
          sh "mkdir -p ${bundleName}"
          dir("controller/bundle"){
            sh "cp --parents `find -name \\*.yaml*` ../../${bundleName}/"
          }
          sh '''
            kubectl exec --namespace cbci cjoc-0 -- rm -rf /var/jenkins_config/jcasc-bundles-store/${bundleName} || true
            kubectl cp --namespace cbci ${bundleName} cjoc-0:/var/jenkins_config/jcasc-bundles-store/
            sleep 7
            kubectl apply -f ./microblog-frontend/git-repo.yaml
          '''
        }
        
        echo "provisioning managed controller"
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh '''          
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" ./groovy/create-workshop-users.groovy
            sed -i "s/REPLACE_WORKSHOP_ATTENDEES_PASSWORD/$WORKSHOP_ATTENDEES_PASSWORD/g" ./groovy/create-workshop-users.groovy 
            sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" ./groovy/create-workshop-users.groovy 
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/create-workshop-users.groovy
            
            curl --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST \
              -H "Accept: application/json" \
              http://cjoc/cjoc/load-casc-bundles/checkout
            
            curl --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST \
              -H "Accept: application/json" \
              http://cjoc/cjoc/casc-items/create-items?path=/$GitHubApp \
              --data-binary @./controller/controller.yaml -H 'Content-Type:text/yaml'
              
            sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy
            alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/ops-delete-github-app-credential.groovy
          '''
        }
      }
    }
  }
  post {
    always {
      echo "GitHub target type (should be Organization): ${TARGET_TYPE}"
    }
  }
}
