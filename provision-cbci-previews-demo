def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent none
  environment {
    WORKSHOP_ATTENDEES_PASSWORD = credentials('workshop-attendees-password')
    GITHUB_WEBHOOK_SECRET = credentials('github-webhook-secret')
    BEEDEMO_DEV_PAT = credentials('beedemo-dev-github-pat')
    TARGET_TYPE = event.installation.target_type.toString()
    GitHubApp = event.installation.app_slug.toString()
    GitHubOrganization = event.installation.account.login.toString().replaceAll(" ", "-")
    GitHubOrganizationLowercase = GitHubOrganization.toLowerCase()
    GitHubUsername = event.sender.login.toString().toLowerCase()
    whatEven = GitHubUsername.toLowerCase()
    WEBHOOK_BASE_URL = "$ENVIRONMENT_PREFIX"+"cbci.workshop.cb-sa.io"
    controllerFolder = GitHubOrganization.toLowerCase()
    controllerName = "controller"
    bundleName = "${controllerFolder}-${controllerName}"    
    AVAILABILITY_PATTERN = "${GitHubApp}/${controllerFolder}/${controllerName}"
  }
  triggers {
    eventTrigger jmespathQuery("action=='created' && installation.app_slug=='cloudbees-ci-previews-demo'")
  } 
  stages {
    stage('Using GitHub User instead of Org') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
        environment name: 'TARGET_TYPE', value: 'User'
      }
      steps {
        echo "installation.account.login:${GitHubOrganization}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        error "GitHub target type (should be Organization): ${TARGET_TYPE}"
      }
    }
    stage('Provision Managed Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
        environment name: 'TARGET_TYPE', value: 'Organization'
      }
      agent {
        kubernetes {
          label 'kubectl'
          yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
          """
        }
      }
      steps {
        echo "installation.account.login:${GitHubOrganization}"
        checkout scm
        echo "GitHub target type (should be Organization): ${TARGET_TYPE}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "Jenkins userId will be: ${GitHubUsername}"
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "sed -i \"s/REPLACE_BASE_CREDENTIAL_ID/cloudbees-ci-previews-demo-github-app/g\" ./groovy/ops-create-github-app-credential.groovy"
        
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh '''
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            '''
        }
        withCredentials([usernamePassword(credentialsId: "$GitHubOrganization",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: '''
            echo $GitHubOrganization
            curl --silent -X DELETE -H "Accept: application/vnd.github.antiope-preview+json" -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/controller
            curl --silent -X DELETE -H "Accept: application/vnd.github.antiope-preview+json" -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/pipeline-library
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/pipeline-template-catalog
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/insurance-frontend
            
            sleep 5
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN"  \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/cloudbees-ci-config-bundle/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"controller"}'
                 
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-library/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"pipeline-library"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-template-catalog/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"pipeline-template-catalog"}'

            curl  -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/insurance-frontend/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"insurance-frontend"}'
            
            rm -rf ./insurance-frontend || true
            rm -rf ./controller || true
            rm -rf ./pipeline-template-catalog || true
            rm -rf ./pipeline-library || true
            
            mkdir -p insurance-frontend
            mkdir -p controller
            mkdir -p pipeline-template-catalog
            mkdir -p pipeline-library
          ''')
          
          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/insurance-frontend/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''
            cd insurance-frontend
            git init
            git config user.email "$GitHubUsername@workshop.cb-sa.io"
            git config user.name "$GitHubOrganization"
            git remote add origin https://x-access-token:$GITHUB_ACCESS_TOKEN@github.com/$GitHubOrganization/insurance-frontend.git
            git pull origin main
            git checkout main
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganizationLowercase/g" chart/values.yaml
            git commit -am 'updating $GitHubOrganization/insurance-frontend chart/values.yaml for $GitHubUsername'
            git push origin main
            
            curl \
              -X PUT \
              -H 'Accept: application/vnd.github+json' \
              -H "Authorization: Bearer $GITHUB_ACCESS_TOKEN" \
              https://api.github.com/repos/$GitHubOrganization/insurance-frontend/branches/main/protection \
              -d '{"required_status_checks":{"strict":true,"contexts":["'"stage/Build and Push Container Image"'"]},"enforce_admins":true,"required_pull_request_reviews":null,"restrictions":null,"allow_force_pushes":false,"allow_deletions":false,"block_creations":true}'

            curl \
              -X PATCH \
              -H "authorization: Bearer $GITHUB_ACCESS_TOKEN"  \
              -H 'Accept: application/vnd.github.antiope-preview+json' \
              https://api.github.com/repos/${GitHubOrganization}/insurance-frontend \
              -d '{"delete_branch_on_merge":true}'
            
          ''')
          
          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-library/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''

            cd pipeline-template-catalog
            git init
            git config user.email "$GitHubUsername@workshop.cb-sa.io"
            git config user.name "$GitHubOrganization"
            git remote add origin https://x-access-token:$GITHUB_ACCESS_TOKEN@github.com/$GitHubOrganization/pipeline-template-catalog.git
            git pull origin main
            git checkout main
            mkdir templates/container-build
            curl https://raw.githubusercontent.com/cloudbees-days/pipeline-template-catalog/previews-demo/templates/container-build/template.yaml > templates/container-build/template.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/pipeline-template-catalog/previews-demo/templates/container-build/Jenkinsfile > templates/container-build/Jenkinsfile
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" templates/container-build/template.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/pipeline-template-catalog/previews-demo/templates/casc-bundle/Jenkinsfile > templates/casc-bundle/Jenkinsfile
            
            git add *
            git commit -a -m 'updating $GitHubOrganization/pipeline-template-catalog for $GitHubUsername'
            git push -u origin main
          ''')
          
          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/controller/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''

            cd controller
            git init
            git config user.email "$GitHubUsername@workshop.cb-sa.io"
            git config user.name "$GitHubOrganization"
            git remote add origin https://x-access-token:$GITHUB_ACCESS_TOKEN@github.com/$GitHubOrganization/controller.git
            
            git pull origin main
            git checkout main
            
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/pipeline-workshop/controller.yaml > controller.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" controller.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" controller.yaml
            sed -i "s/REPLACE_FOLDER_NAME/$controllerFolder/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP_ID/$GitHubAppId/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" controller.yaml
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" controller.yaml
            git add controller.yaml
            
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/.markerfile > .markerfile
            git add .markerfile
            
            cd bundle
            mkdir -p items/admin-jobs
            mkdir -p items/pipelines
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/bundle/items/pipelines-folder.yaml > items/pipelines-folder.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/bundle/items/admin-jobs-folder.yaml > items/admin-jobs-folder.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/bundle/items/admin-jobs/update-casc-bundle.yaml > items/admin-jobs/update-casc-bundle.yaml
            git add *
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/bundle/bundle.yaml > bundle.yaml 
            
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml            
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml   
            
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/bundle/jenkins.yaml > jenkins.yaml
            
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/bundle/plugin-catalog.yaml > plugin-catalog.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/previews-demo/bundle/plugins.yaml > plugins.yaml
            git add *

            cd ..

            git add *
            git commit -a -m 'updating $GitHubOrganization/controller bundle for $GitHubUsername'
            git push -u origin main
            
             curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                  -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                  https://api.github.com/orgs/$GitHubOrganization/hooks \
                  --data '{"name":"web","config":{"url":"'"https://$WEBHOOK_BASE_URL/$controllerFolder-$controllerName/github-webhook/"'","content_type":"json","secret":"'"$GITHUB_WEBHOOK_SECRET"'","insecure_ssl":"0"},"events": ["check_run","check_suite","create","delete","push","pull_request","pull_request_review_comment","repository"]}'
          ''')
          script {
            env.INVITE_ID = sh(script: ''' 
                curl -X PUT \
                  -H 'Accept: application/vnd.github+json' \
                  -H "Authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                  https://api.github.com/repos/$GitHubOrganization/insurance-frontend/collaborators/beedemo-dev \
                  -d '{"permission":"admin"}' \
                | jq -r '.id' | tr -d '\n' 
              ''', returnStdout: true)
          }

        }
        echo "INVITE_ID = $INVITE_ID"
        sh 'echo $INVITE_ID'
        
        sh '''
          curl -X PATCH \
            -H 'Accept: application/vnd.github+json' \
            -H "Authorization: Bearer $BEEDEMO_DEV_PAT" \
            https://api.github.com/user/repository_invitations/$INVITE_ID
        '''
        
        echo "creating config bundle on OC"
        container('kubectl') {
          sh "rm -rf ./${bundleName}"
          sh "mkdir -p ${bundleName}"
          sh "cp controller/bundle/*.yaml ${bundleName}"
          sh "kubectl exec --namespace cbci cjoc-0 -- rm -rf /var/jenkins_config/jcasc-bundles-store/${bundleName} || true"
          sh "kubectl cp --namespace cbci ${bundleName} cjoc-0:/var/jenkins_config/jcasc-bundles-store/"
          
          sh '''
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" ./kubernetes-provisioning/previews/git-repo.yaml
            kubectl apply -f ./kubernetes-provisioning/previews/git-repo.yaml
          '''
        }
        
        echo "provisioning managed controller"
        sh '''          
          sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" ./groovy/create-workshop-users.groovy
          sed -i "s/REPLACE_WORKSHOP_ATTENDEES_PASSWORD/$WORKSHOP_ATTENDEES_PASSWORD/g" ./groovy/create-workshop-users.groovy 
          sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" ./groovy/create-workshop-users.groovy 
        '''
        
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh '''
            curl --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST \
              -H "Accept: application/json" \
              http://cjoc/cjoc/load-casc-bundles/checkout
              
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/create-workshop-users.groovy
            
            curl --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST \
              -H "Accept: application/json" \
              http://cjoc/cjoc/casc-items/create-items?path=/$GitHubApp \
              --data-binary @./controller/controller.yaml -H 'Content-Type:text/yaml'
          '''
        }
        
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy" 
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh '''
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-delete-github-app-credential.groovy
            '''
        }
      }
    }
  }
}
