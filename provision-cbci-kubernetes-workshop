def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent none
  options { timeout(time: 10, unit: 'MINUTES') }
  environment {
    GITHUB_WEBHOOK_SECRET = credentials('github-webhook-secret')
    GCP_PROJECT="core-workshop"
    TARGET_TYPE = event.installation.target_type.toString()
    GitHubApp = event.installation.app_slug.toString()
    GitHubOrganization = event.installation.account.login.toString().replaceAll(" ", "-")
    GitHubUsername = event.sender.login.toString()
    controllerFolder = GitHubOrganization.toLowerCase()
    controllerName = "ops-controller"
    workshopId = "cloudbees-ci-kuberenetes-workshop"
    WEBHOOK_BASE_URL = "$ENVIRONMENT_PREFIX"+"cbci.workshop.cb-sa.io"
  }
  triggers {
    eventTrigger jmespathQuery("action=='created' && installation.app_slug=='cloudbees-ci-kubernetes-workshop'")
  } 
  stages {
    stage('Provision Managed Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
      }
      agent {
        kubernetes {
          yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
          """
        }
      }
      steps {
        echo "installation.account.login:${GitHubOrganization}"
        checkout scm
        echo "GitHub target type (should be Organization): ${TARGET_TYPE}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "Jenkins userId will be: ${GitHubUsername}"
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "sed -i \"s/REPLACE_BASE_CREDENTIAL_ID/${ENVIRONMENT_PREFIX}cloudbees-ci-casc-workshop-github-app/g\" ./groovy/ops-create-github-app-credential.groovy"
        
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh '''
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            '''
        }
        withCredentials([usernamePassword(credentialsId: "$GitHubOrganization",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: '''
            echo $GitHubOrganization
            curl --silent -X DELETE -H "Accept: application/vnd.github.antiope-preview+json" -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/cloudbees-ci-k8s-cloudshell-tutorials
            
            sleep 5
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN"  \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/cloudbees-ci-k8s-cloudshell-tutorials/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"cloudbees-ci-k8s-cloudshell-tutorials","include_all_branches":true}'
            
            rm -rf ./cloudbees-ci-k8s-cloudshell-tutorials || true
            
            mkdir -p cloudbees-ci-k8s-cloudshell-tutorials
          ''')
          
          waitUntil {
            script {
              def status = sh script: '''curl -s -o /dev/null -w '%{http_code}' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-k8s-cloudshell-tutorials/git/ref/heads/main''', returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''
            cd cloudbees-ci-k8s-cloudshell-tutorials
            git init
            git config user.email "$GitHubUsername@workshop.cb-sa.io"
            git config user.name "$GitHubOrganization"
            git remote add origin https://x-access-token:$GITHUB_ACCESS_TOKEN@github.com/$GitHubOrganization/cloudbees-ci-k8s-cloudshell-tutorials.git
            git pull origin main
            git checkout main
            sed -i "s/REPLACE_GITHUB_USER/$GitHubUsername/g" tutorial.md
            sed -i "s/REPLACE_GCP_PROJECT/$GCP_PROJECT/g" tutorial.md
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" README.md
            git commit -a -m 'updating $GitHubOrganization/cloudbees-ci-k8s-cloudshell-tutorials variable replacement'
            git push origin main
          ''')
        }
        
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy" 
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh '''
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-delete-github-app-credential.groovy
            '''
        }
      }
    }
  }
}
