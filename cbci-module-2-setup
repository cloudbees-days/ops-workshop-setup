def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent none  
  triggers {
    eventTrigger jmespathQuery("action=='closed' && pull_request.head.ref=='cbci-module-2-setup' && sender.login !='cloudbees-ci-workshop[bot]'")
  }
  options { timeout(time: 5, unit: 'MINUTES') }
  environment {
    GitHubOrganization = event.organization.login.toString().replaceAll(" ", "-")
    GitHubApp = "cloudbees-ci-workshop"
    GitHubUsername = event.sender.login.toString().toLowerCase()
    controllerFolder = GitHubOrganization.toLowerCase()
    controllerName = "controller"
    bundleName = "${controllerFolder}-${controllerName}"
  }
  stages {
    stage('Update Config Bundle') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
      }
      agent {
        kubernetes {
          label 'kubectl'
          yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
          """
        }
      }
      steps {
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "GitHub username: ${GitHubUsername}"
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "sed -i \"s/REPLACE_BASE_CREDENTIAL_ID/cloudbees-ci-workshop-github-app/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh """
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            """
        }
        withCredentials([usernamePassword(credentialsId: "${GitHubOrganization}",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: """
            rm -rf ./cloudbees-ci-config-bundle || true
            rm -rf ./pipeline-template-catalog || true
            mkdir -p cloudbees-ci-config-bundle
            mkdir -p pipeline-template-catalog 

            cd pipeline-template-catalog
            git init
            git config user.email "${GitHubUsername}@workshop.cb-sa.io"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/pipeline-template-catalog.git
            git pull origin main
            git checkout main
            curl https://raw.githubusercontent.com/cloudbees-days/pipeline-template-catalog/cbic-workshop-module-2/templates/casc-bundle/Jenkinsfile > templates/casc-bundle/Jenkinsfile
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/pipeline-template-catalog bundle for ${GitHubUsername}'
            git push -u origin main        

            cd ../cloudbees-ci-config-bundle
            git init
            git config user.email "cloudbees-ci.bot@cloudbees.com"
            git config user.name "CloudBees CI Bot"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/cloudbees-ci-config-bundle.git
            git pull origin main
            git checkout main

            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -X DELETE \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/git/refs/heads/casc-gitops-lab
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -X DELETE \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/git/refs/heads/pipeline-policies-lab
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -X DELETE \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/git/refs/heads/rbac-lab
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -X DELETE \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/git/refs/heads/cbci-module-2-setup
            
            
            curl -X PATCH \
                 -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"state":"closed"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls/3
          """)
        }
        
        echo "updating managed controller security opt out mode"
        sh """
          sed -i "s/REPLACE_GITHUB_ORG/$controllerFolder/g" ./groovy/oc-update-controller-security-opt-out-authz.groovy 
          sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" ./groovy/oc-update-controller-security-opt-out-authz.groovy
          sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" ./groovy/oc-update-controller-security-opt-out-authz.groovy
        """
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh """
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/oc-update-controller-security-opt-out-authz.groovy
          """
        }
        
        echo "creating config bundle on OC"
        container('kubectl') {
          sh "rm -rf ./${bundleName}"
          sh "mkdir -p ${bundleName}"
          sh "cp cloudbees-ci-config-bundle/bundle/*.yaml ${bundleName}"
          sh "kubectl exec --namespace cbci cjoc-0 -- rm -rf /var/jenkins_home/jcasc-bundles-store/${bundleName} || true"
          sh "kubectl cp --namespace cbci ${bundleName} cjoc-0:/var/jenkins_home/jcasc-bundles-store/"
        }
        
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy" 
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh '''
            curl --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST \
              http://cjoc/cjoc/load-casc-bundles/checkout
              
            curl -s --user $JENKINS_CLI_USR:$JENKINS_CLI_PSW -XPOST http://${bundleName}.controllers.svc.cluster.local/${bundleName}/casc-bundle-mgnt/reload-bundle
          '''
          sh """
              alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
              cli groovy =<./groovy/ops-delete-github-app-credential.groovy
          """
        }
      }
    }
  }
}
