pipeline {
  agent {
    kubernetes {
      label 'kubectl'
      yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
      """
    }
  } 
  stages {
    stage('Provision Managed Controller') {
      steps {
        checkout scm
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "Jenkins userId: ${BUILD_USER_ID}"
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh """
                alias cli='java -jar jenkins-cli.jar -s http://teams-ops/teams-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            """
        }
        withCredentials([usernamePassword(credentialsId: "${GitHubOrganization}",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: """
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}'  \
                 https://api.github.com/repos/cloudbees-days/cloudbees-ci-config-bundle/forks \
                 --data '{"organization":"${GitHubOrganization}"}'
                 
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-library/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-library"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-template-catalog/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-template-catalog"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/simple-java-maven-app/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"simple-java-maven-app"}'
            
            rm -rf ./cloudbees-ci-config-bundle || true
            rm -rf ./pipeline-template-catalog || true
            mkdir -p cloudbees-ci-config-bundle
            mkdir -p pipeline-template-catalog
            
            cd pipeline-template-catalog
            git init
            git config user.email "${BUILD_USER_EMAIL}"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/pipeline-template-catalog.git
            git pull origin master
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" Jenkinsfile
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" create-pipeline-template-catalog.json
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" templates/pipeline-policies/Jenkinsfile
            sed -i "s/REPLACE_USER_EMAIL/$BUILD_USER_EMAIL/g" templates/pipeline-policies/Jenkinsfile
            git commit -a -m 'updating ${GitHubOrganization}/pipeline-template-catalog bundle for ${GitHubUsername}'
            git push -u origin master
            
            cd ../cloudbees-ci-config-bundle
            git init
            git config user.email "${BUILD_USER_EMAIL}"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/cloudbees-ci-config-bundle.git
            
            git pull origin master
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$BUILD_USER_ID/g" jenkins.yaml
            sed -i "s/REPLACE_USER_EMAIL/$BUILD_USER_EMAIL/g" jenkins.yaml
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle for ${GitHubUsername}'
            git push -u origin master
            git fetch
            
            git checkout casc-gitops-lab
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$BUILD_USER_ID/g" jenkins.yaml
            sed -i "s/REPLACE_USER_EMAIL/$BUILD_USER_EMAIL/g" jenkins.yaml
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on casc-gitops-lab branch for ${GitHubUsername}'
            git push origin casc-gitops-lab
            
            git checkout dev-casc-lab
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$BUILD_USER_ID/g" jenkins.yaml
            sed -i "s/REPLACE_USER_EMAIL/$BUILD_USER_EMAIL/g" jenkins.yaml
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on dev-casc-lab branch for ${GitHubUsername}'
            git push origin dev-casc-lab

            git checkout collab-lab
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$BUILD_USER_ID/g" jenkins.yaml
            sed -i "s/REPLACE_USER_EMAIL/$BUILD_USER_EMAIL/g" jenkins.yaml
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on collab-lab branch for ${GitHubUsername}'
            git push origin collab-lab
            git checkout master
            
            echo "create pull requests"
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"GitOps lab updates","head":"casc-gitops-lab","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"CasC for Devs lab updates","head":"dev-casc-lab","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"Cross Team Collaboration Lab: Enable Notifications","head":"collab-lab","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            echo "create pipeline-policies repo"
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"name":"pipeline-policies","description":"This reposiotry will be utilized with the CloudBees CI Workshop Pipeline Policies as Code lab.","auto_init":true,"license_template":"mit","delete_branch_on_merge":true}' \
                 https://api.github.com/orgs/${GitHubOrganization}/repos
          """)
        }
        
        echo "creating config bundle on OC"
        container('kubectl') {
          sh "rm -rf ./${GitHubUsername}"
          sh "mkdir -p ${GitHubUsername}"
          sh "cp cloudbees-ci-config-bundle/*.yaml ${GitHubUsername}"
          sh "kubectl exec --namespace cloudbees-core cjoc-0 -- rm -rf /var/jenkins_home/jcasc-bundles-store/${GitHubUsername} || true"
          sh "kubectl cp --namespace cloudbees-core ${GitHubUsername} cjoc-0:/var/jenkins_home/jcasc-bundles-store/"
        }
        
        echo "provisioning managed controller"
        sh """
          sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" ./groovy/oc-create-update-managed-controller.groovy
          sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" ./groovy/oc-create-update-managed-controller.groovy
          sed -i "s/REPLACE_JENKINS_USER/$BUILD_USER_ID/g" ./groovy/oc-create-update-managed-controller.groovy
          sed -i "s/REPLACE_USER_EMAIL/$BUILD_USER_EMAIL/g" ./groovy/oc-create-update-managed-controller.groovy
        """
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh """
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/oc-create-update-managed-controller.groovy
          """
        }
        
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy" 
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh """
                alias cli='java -jar jenkins-cli.jar -s http://teams-ops/teams-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-delete-github-app-credential.groovy
            """
        }
      }
    }
  }
}
