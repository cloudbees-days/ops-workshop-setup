def controllerName
pipeline {
  agent {
    kubernetes {
      label 'kubectl'
      yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
      """
    }
  }
  triggers {
    eventTrigger jmespathQuery("action=='created' && installation.app_slug=='cloudbees-ci-workshop'")
  } 
  stages {
    stage('Provision Managed Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
      }
      steps {
        script {
          def event = currentBuild.getBuildCauses()[0].event
          GitHubOrganization = event.installation.account.login.toString()
          GitHubUsername = event.sender.login.toString()
        }
        checkout scm
        echo "GitHub username: ${GitHubUsername}"
        script {
          GitHubOrganization = GitHubOrganization.replaceAll(" ", "-")
          controllerName = GitHubOrganization.toLowerCase()
        }
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "Jenkins userId will be: ${GitHubUsername}"
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "sed -i \"s/REPLACE_BASE_CREDENTIAL_ID/cloudbees-ci-workshop-github-app/g\" ./groovy/ops-create-github-app-credential.groovy"
        
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh """
                alias cli='java -jar jenkins-cli.jar -s http://teams-ops/teams-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            """
        }
        withCredentials([usernamePassword(credentialsId: "${GitHubOrganization}",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: """
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}'  \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/cloudbees-ci-config-bundle/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"cloudbees-ci-config-bundle"}'
                 
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-library/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-library"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-template-catalog/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-template-catalog"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/simple-java-maven-app/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"simple-java-maven-app"}'
            
            rm -rf ./cloudbees-ci-config-bundle || true
            rm -rf ./pipeline-template-catalog || true
            mkdir -p cloudbees-ci-config-bundle
            mkdir -p pipeline-template-catalog
            
            cd pipeline-template-catalog
            git init
            git config user.email "${GitHubUsername}@workshop.cb-sa.io"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/pipeline-template-catalog.git
            git pull origin master
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" Jenkinsfile
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" create-pipeline-template-catalog.json
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" templates/pipeline-policies/Jenkinsfile
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" templates/pipeline-policies/Jenkinsfile
            git commit -a -m 'updating ${GitHubOrganization}/pipeline-template-catalog bundle for ${GitHubUsername}'
            git push -u origin master
            
            git fetch
            git checkout -B cross-team-collab-lab
            curl https://raw.githubusercontent.com/cloudbees-days/pipeline-template-catalog/cross-team-collab-lab/templates/maven/Jenkinsfile > templates/maven/Jenkinsfile
            git commit -a -m 'creating ${GitHubOrganization}/pipeline-template-catalog cross-team-collab-lab branch for ${GitHubUsername}'
            git push -u origin cross-team-collab-lab

            cd ../cloudbees-ci-config-bundle
            git init
            git config user.email "${BUILD_USER_EMAIL}"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/cloudbees-ci-config-bundle.git
            
            git pull origin master
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jenkins.yaml
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle for ${GitHubUsername}'
            git push origin master
            git fetch
            
            git checkout -B casc-gitops-lab
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/.markerfile > .markerfile
            git add .markerfile
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/plugins.yaml > plugins.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jenkins.yaml
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on casc-gitops-lab branch for ${GitHubUsername}'
            git push -u origin casc-gitops-lab
            
            git checkout -B dev-casc-lab
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/.markerfile > .markerfile
            git add .markerfile
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/plugins.yaml > plugins.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jenkins.yaml
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on dev-casc-lab branch for ${GitHubUsername}'
            git push -u origin dev-casc-lab

            git checkout -B collab-lab
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/collab-lab/.markerfile > .markerfile
            git add .markerfile
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/collab-lab/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/collab-lab/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/collab-lab/plugins.yaml > plugins.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jenkins.yaml
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on collab-lab branch for ${GitHubUsername}'
            git push -u origin collab-lab

            git checkout -b cbci-module-2-setup
            mkdir groovy
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/plugin-catalog.yaml > plugin-catalog.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/plugins.yaml > plugins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/ops-workshop-setup/master/groovy/cbci-module-2-create-pipeline-template-job.groovy > groovy/create-pipeline-template-job.groovy  
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" groovy/create-pipeline-template-job.groovy
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle for ${GitHubUsername}'
            git push origin cbci-module-2-setup
            git checkout master
            
            echo "create pull requests"
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"Cross Team Collaboration: Add Event Trigger","head":"cross-team-collab-lab","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"GitOps lab updates","head":"casc-gitops-lab","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"CasC for Devs lab updates","head":"dev-casc-lab","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"Cross Team Collaboration Lab: Enable Notifications","head":"collab-lab","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"CloudBees CI Module 2 Setup","head":"cbci-module-2-setup","base":"master"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            echo "create pipeline-policies repo"
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"name":"pipeline-policies","description":"This reposiotry will be utilized with the CloudBees CI Workshop Pipeline Policies as Code lab.","auto_init":true,"license_template":"mit","delete_branch_on_merge":true}' \
                 https://api.github.com/orgs/${GitHubOrganization}/repos
          """)
        }
        
        echo "creating config bundle on OC"
        container('kubectl') {
          sh "rm -rf ./${controllerName}"
          sh "mkdir -p ${controllerName}"
          sh "cp cloudbees-ci-config-bundle/*.yaml ${controllerName}"
          sh "kubectl exec --namespace cloudbees-core cjoc-0 -- rm -rf /var/jenkins_home/jcasc-bundles-store/${controllerName} || true"
          sh "kubectl cp --namespace cloudbees-core ${controllerName} cjoc-0:/var/jenkins_home/jcasc-bundles-store/"
        }
        
        echo "provisioning managed controller"
        sh """
          sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" ./groovy/oc-create-update-managed-controller.groovy
          sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" ./groovy/oc-create-update-managed-controller.groovy
          sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" ./groovy/oc-create-update-managed-controller.groovy
        """
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh """
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/oc-create-update-managed-controller.groovy
          """
        }
        
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy" 
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh """
                alias cli='java -jar jenkins-cli.jar -s http://teams-ops/teams-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-delete-github-app-credential.groovy
            """
        }
      }
    }
  }
}
