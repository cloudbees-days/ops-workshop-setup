def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent none
  options { timeout(time: 10, unit: 'MINUTES') }
  environment {
    WORKSHOP_ATTENDEES_PASSWORD = credentials('workshop-attendees-password')
    GITHUB_WEBHOOK_SECRET = credentials('github-webhook-secret')
    TARGET_TYPE = event.installation.target_type.toString()
    GitHubApp = event.installation.app_slug.toString()
    GitHubAppId = event.installation.app_id.toString()
    GitHubOrganization= event.installation.account.login.toString().replaceAll(" ", "-")
    GitHubOrganizationLowercase = GitHubOrganization.toLowerCase()
    GitHubUsername = event.sender.login.toString().toLowerCase()
    controllerFolder = GitHubOrganization.toLowerCase()
    controllerName = "controller"
    bundleName = "${controllerFolder}-${controllerName}"
    WEBHOOK_BASE_URL = "$ENVIRONMENT_PREFIX"+"cbci.workshop.cb-sa.io"
    AVAILABILITY_PATTERN = "${GitHubApp}/${controllerFolder}/${controllerName}"
  }
  triggers {
    eventTrigger jmespathQuery("action=='created' && installation.app_slug=='${ENVIRONMENT_PREFIX}cloudbees-ci-workshop'")
  } 
  stages {
    stage('Using GitHub User instead of Org') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
        environment name: 'TARGET_TYPE', value: 'User'
      }
      steps {
        echo "installation.account.login:${GitHubOrganization}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        error "GitHub target type (should be Organization): ${TARGET_TYPE}"
      }
    }
    stage('Provision Managed Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
        environment name: 'TARGET_TYPE', value: 'Organization'
      }
      agent {
        kubernetes {
          label 'kubectl'
          yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
          """
        }
      }
      steps {
        echo "installation.account.login:${GitHubOrganization}"
        checkout scm
        echo "GitHub target type (should be Organization): ${TARGET_TYPE}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "Jenkins userId will be: ${GitHubUsername}"
        script {
          if(TARGET_TYPE != "Organization") {
            error "Installing Workshop GitHub App only supports GitHub Organizations, not Users."
          }
        }
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "sed -i \"s/REPLACE_BASE_CREDENTIAL_ID/${ENVIRONMENT_PREFIX}cloudbees-ci-workshop-github-app/g\" ./groovy/ops-create-github-app-credential.groovy"
        
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh """
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            """
        }
        withCredentials([usernamePassword(credentialsId: "${GitHubOrganization}",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: """
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer $GITHUB_ACCESS_TOKEN' https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer $GITHUB_ACCESS_TOKEN' https://api.github.com/repos/${GitHubOrganization}/pipeline-library
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer $GITHUB_ACCESS_TOKEN' https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer $GITHUB_ACCESS_TOKEN' https://api.github.com/repos/${GitHubOrganization}/pipeline-policies
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer $GITHUB_ACCESS_TOKEN' https://api.github.com/repos/${GitHubOrganization}/simple-java-maven-app
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H 'authorization: Bearer $GITHUB_ACCESS_TOKEN' https://api.github.com/repos/${GitHubOrganization}/microblog-frontend
            sleep 5
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}'  \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/cloudbees-ci-config-bundle/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"cloudbees-ci-config-bundle"}'
                 
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-library/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-library"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-template-catalog/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"pipeline-template-catalog"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/simple-java-maven-app/generate \
                 --data '{"owner":"${GitHubOrganization}","name":"simple-java-maven-app"}'
                 
            """)

          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }

          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-library/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }

          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }

          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-library/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }

          waitUntil {
            script {
              def status = sh script: "curl -s -o /dev/null -w '%{http_code}' -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/git/ref/heads/main", returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: """  
            rm -rf ./cloudbees-ci-config-bundle || true
            rm -rf ./pipeline-template-catalog || true
            rm -rf ./pipeline-library || true
            mkdir -p cloudbees-ci-config-bundle
            mkdir -p pipeline-template-catalog
            mkdir -p pipeline-library

            cd pipeline-library
            git init
            git config user.email "${GitHubUsername}@workshop.cb-sa.io"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/pipeline-library.git
            git pull origin main
            git checkout -B module-2
            curl https://raw.githubusercontent.com/cloudbees-days/pipeline-library/module-2/vars/configBundleUpdate.groovy > vars/configBundleUpdate.groovy
            git commit -a -m 'updating ${GitHubOrganization}/pipeline-library configBundleUpdate.groovy for ${GitHubUsername}'
            git push -u origin module-2

            cd ../pipeline-template-catalog
            git init
            git config user.email "${GitHubUsername}@workshop.cb-sa.io"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/pipeline-template-catalog.git
            git pull origin main
            git checkout main
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" templates/pipeline-policies/Jenkinsfile
            sed -i "s/REPLACE_FOLDER_NAME/$controllerFolder/g" templates/pipeline-policies/Jenkinsfile
            git commit -a -m 'updating ${GitHubOrganization}/pipeline-template-catalog bundle for ${GitHubUsername}'
            git push -u origin main
            
            git fetch
            git checkout -B cross-team-collab-lab
            curl https://raw.githubusercontent.com/cloudbees-days/pipeline-template-catalog/cross-team-collab-lab/templates/maven/Jenkinsfile > templates/maven/Jenkinsfile
            git commit -a -m 'creating ${GitHubOrganization}/pipeline-template-catalog cross-team-collab-lab branch for ${GitHubUsername}'
            git push -u origin cross-team-collab-lab

            cd ../cloudbees-ci-config-bundle
            git init
            git config user.email "${GitHubUsername}@workshop.cb-sa.io"
            git config user.name "${GitHubOrganization}"
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/cloudbees-ci-config-bundle.git
            
            git pull origin main
            git checkout main          

            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" controller.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" controller.yaml
            sed -i "s/REPLACE_FOLDER_NAME/$controllerFolder/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP_ID/$GitHubAppId/g" controller.yaml

            cd bundle
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml            
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml   
            
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle for ${GitHubUsername}'
            git push origin main
            git fetch

            git checkout -b casc-gitops-lab
            cd ..
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/.markerfile > .markerfile
            git add .markerfile

            cd bundle
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/bundle/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/bundle/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/bundle/plugins.yaml > plugins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/casc-gitops-lab/bundle/items.yaml > items.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml                       
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml   
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" items.yaml
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on casc-gitops-lab branch for ${GitHubUsername}'
            git push -u origin casc-gitops-lab

            git checkout -b pipeline-policies-lab
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/pipeline-policies-lab/bundle/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/pipeline-policies-lab/bundle/jenkins.yaml > jenkins.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml                        
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml       
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on pipeline-policies-lab branch for ${GitHubUsername}'
            git push -u origin pipeline-policies-lab

            git checkout -b rbac-lab
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/rbac-lab/bundle/rbac.yaml > rbac.yaml
            git add rbac.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/rbac-lab/bundle/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/rbac-lab/bundle/jenkins.yaml > jenkins.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml                        
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml     
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" rbac.yaml
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on rbac-lab branch for ${GitHubUsername}'
            git push -u origin rbac-lab
            
            git checkout -b cbci-module-2-setup
            mkdir groovy
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/bundle/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/bundle/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/bundle/plugin-catalog.yaml > plugin-catalog.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/cbci-module-2-setup/bundle/plugins.yaml > plugins.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml                       
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml       
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle for ${GitHubUsername}'
            git push origin cbci-module-2-setup
            
            git checkout -B dev-casc-lab
            cd ..
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/.markerfile > .markerfile
            git add .markerfile

            cd bundle
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/bundle/bundle.yaml > bundle.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/bundle/jenkins.yaml > jenkins.yaml
            curl https://raw.githubusercontent.com/cloudbees-days/cloudbees-ci-config-bundle/dev-casc-lab/bundle/plugins.yaml > plugins.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml                        
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml       
            git commit -a -m 'updating ${GitHubOrganization}/cloudbees-ci-config bundle on dev-casc-lab branch for ${GitHubUsername}'
            git push -u origin dev-casc-lab
            cd ..
            git checkout main
            
            curl \
              -X PATCH \
              -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
              -H "Accept: application/vnd.github.antiope-preview+json" \
              https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle \
              -d '{"delete_branch_on_merge":true}'
            
            echo "create pull requests"
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"Cross Team Collaboration: Add Event Trigger","head":"cross-team-collab-lab","base":"main"}' \
                 https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog/pulls
            
            curl \
              -X PATCH \
              -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
              -H "Accept: application/vnd.github.antiope-preview+json" \
              https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog \
              -d '{"delete_branch_on_merge":true}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"GitOps lab updates","head":"casc-gitops-lab","base":"main"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"Pipeline Policies lab updates","head":"pipeline-policies-lab","base":"casc-gitops-lab"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"RBAC lab updates","head":"rbac-lab","base":"pipeline-policies-lab"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"CasC for Devs lab updates","head":"dev-casc-lab","base":"main"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls

            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 --data '{"title":"CloudBees CI Module 2 Setup","head":"cbci-module-2-setup","base":"main"}' \
                 https://api.github.com/repos/${GitHubOrganization}/cloudbees-ci-config-bundle/pulls

             curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                  -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                  https://api.github.com/orgs/${GitHubOrganization}/hooks \
                  --data '{"name":"web","config":{"url":"https://${ENVIRONMENT_PREFIX}cbci.workshop.cb-sa.io/${controllerFolder}-${controllerName}/github-webhook/","content_type":"json","secret":"$GITHUB_WEBHOOK_SECRET","insecure_ssl":"0"},"events": ["check_run","check_suite","create","delete","push","pull_request","repository"]}'
          """)
        }
        
        echo "creating config bundle on OC"
        container('kubectl') {
          sh "rm -rf ./${bundleName}"
          sh "mkdir -p ${bundleName}"
          sh "cp cloudbees-ci-config-bundle/bundle/*.yaml ${bundleName}"
          sh "kubectl exec --namespace cbci cjoc-0 -- rm -rf /var/jenkins_home/jcasc-bundles-store/${bundleName} || true"
          sh "kubectl cp --namespace cbci ${bundleName} cjoc-0:/var/jenkins_home/jcasc-bundles-store/"
        }
        
        echo "provisioning managed controller"
        sh '''          
          sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" ./groovy/create-workshop-users.groovy
          sed -i "s/REPLACE_WORKSHOP_ATTENDEES_PASSWORD/$WORKSHOP_ATTENDEES_PASSWORD/g" ./groovy/create-workshop-users.groovy 
          sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" ./groovy/create-workshop-users.groovy 
        '''
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          waitUntil {
            script {
              def status = sh script: '''curl -s -o /dev/null -w '%{http_code}' --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST http://cjoc/cjoc/casc-bundle/validate-uploaded-bundle?bundleId=${bundleName}''', returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          sh  '''
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/create-workshop-users.groovy           

            curl --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST \
              http://cjoc/cjoc/casc-items/create-items?path=/$GitHubApp \
              --data-binary @./cloudbees-ci-config-bundle/controller.yaml -H 'Content-Type:text/yaml'
          '''
        }
        
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy" 
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh """
              alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
              cli groovy =<./groovy/ops-delete-github-app-credential.groovy
          """
        }
      }
    }
  }
}
