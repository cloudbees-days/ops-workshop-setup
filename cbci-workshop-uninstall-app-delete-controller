def controllerName
def gitHubUsername
pipeline {
  agent {
    kubernetes {
      label 'kubectl'
      yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: cjoc
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
      """
    }
  }
  options { 
    buildDiscarder(logRotator(numToKeepStr: '10'))
    skipDefaultCheckout()
  }
  triggers {
    eventTrigger jmespathQuery("action=='deleted' && installation.app_slug=='${ENVIRONMENT_PREFIX}cloudbees-ci-workshop'")
  }
  stages {
    stage('Delete Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
      }
      environment {
        GITHUB_ORG_LOGIN="${currentBuild.getBuildCauses()[0].event.installation.account.login}"
      }
      steps {
        echo "GitHub Org name: ${GITHUB_ORG_LOGIN}" 
        sh "curl -O http://cjoc/cjoc/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          script {
            try {
              sh """
                  alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                  cli delete-job "teams/$GITHUB_ORG_LOGIN"
              """
            } catch(e) {
              echo e.toString()
            }
          }
        }
        
        container('kubectl') {
          sh("kubectl -n cloudbees-core delete pod -l cloudbees.com/master=${GITHUB_ORG_LOGIN} --force=true --now=true --wait=false")
          sh("kubectl -n cloudbees-core delete statefulset,pod,pvc,ingress,service,deployment -l tenant=${GITHUB_ORG_LOGIN}-development  --force=true --now=true --wait=false")
          sh("kubectl -n cloudbees-core delete statefulset,pod,pvc,ingress,service,deployment -l tenant=${GITHUB_ORG_LOGIN}-production  --force=true --now=true --wait=false")
          sh("kubectl -n cloudbees-core delete statefulset,pod,pvc,ingress,service,deployment -l type=master,tenant=${GITHUB_ORG_LOGIN}  --force=true --now=true --wait=false")
          sh("kubectl exec --namespace cloudbees-core cjoc-0 -- rm -rf /var/jenkins_home/jcasc-bundles-store/${GITHUB_ORG_LOGIN} || true")
        }
      }
    }
  }
}
