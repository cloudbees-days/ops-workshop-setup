def event = currentBuild.getBuildCauses()[0].event
pipeline {
  agent none
  options { timeout(time: 10, unit: 'MINUTES') }
  environment {
    WORKSHOP_ATTENDEES_PASSWORD = credentials('workshop-attendees-password')
    GITHUB_WEBHOOK_SECRET = credentials('github-webhook-secret')
    TARGET_TYPE = event.installation.target_type.toString()
    GitHubApp = event.installation.app_slug.toString()
    GitHubOrganization = event.installation.account.login.toString().replaceAll(" ", "-")
    GitHubUsername = event.sender.login.toString()
    controllerFolder = GitHubOrganization.toLowerCase()
    controllerName = "ops-controller"
    devControllerName = "dev-controller"
    bundleName = "${controllerFolder}-${controllerName}"
    WEBHOOK_BASE_URL = "$ENVIRONMENT_PREFIX"+"cbci.workshop.cb-sa.io"
    AVAILABILITY_PATTERN = "${GitHubApp}/${controllerFolder}/${controllerName}"
    DEV_AVAILABILITY_PATTERN = "${GitHubApp}/${controllerFolder}/${devControllerName}"
  }
  triggers {
    eventTrigger jmespathQuery("action=='created' && installation.app_slug=='${ENVIRONMENT_PREFIX}cloudbees-ci-casc-workshop'")
  } 
  stages {
    stage('Provision Managed Controller') {
      when {
        beforeAgent true
        triggeredBy 'EventTriggerCause'
      }
      agent {
        kubernetes {
          yaml """
kind: Pod
metadata:
  name: kubectl
spec:
  serviceAccountName: jenkins
  containers:
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    resources:
      requests:
        memory: "500Mi"
    command:
    - cat
    tty: true 
          """
        }
      }
      steps {
        echo "installation.account.login:${GitHubOrganization}"
        checkout scm
        echo "GitHub target type (should be Organization): ${TARGET_TYPE}"
        echo "GitHub username: ${GitHubUsername}"
        echo "GitHub Org Name: ${GitHubOrganization}"
        echo "Jenkins userId will be: ${GitHubUsername}"
        
        echo "begin config bundle updates"
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-create-github-app-credential.groovy"
        sh "sed -i \"s/REPLACE_BASE_CREDENTIAL_ID/${ENVIRONMENT_PREFIX}cloudbees-ci-casc-workshop-github-app/g\" ./groovy/ops-create-github-app-credential.groovy"
        
        sh "curl -O http://operations-ops/operations-ops/jnlpJars/jenkins-cli.jar"
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh '''
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-create-github-app-credential.groovy
            '''
        }
        withCredentials([usernamePassword(credentialsId: "$GitHubOrganization",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh(script: '''
            echo $GitHubOrganization
            curl --silent -X DELETE -H "Accept: application/vnd.github.antiope-preview+json" -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/ops-controller
            curl --silent -X DELETE -H "Accept: application/vnd.github.antiope-preview+json" -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/pipeline-library
            curl --silent -X DELETE -H 'Accept: application/vnd.github.antiope-preview+json' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/pipeline-template-catalog
            curl --silent -X DELETE -H "Accept: application/vnd.github.antiope-preview+json" -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" https://api.github.com/repos/$GitHubOrganization/dev-controller
            
            sleep 5
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN"  \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/ops-controller/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"ops-controller","include_all_branches":true}'
                 
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-library/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"pipeline-library"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 -H "Accept: application/vnd.github.baptiste-preview+json" \
                 https://api.github.com/repos/cloudbees-days/pipeline-template-catalog/generate \
                 --data '{"owner":"'"$GitHubOrganization"'","name":"pipeline-template-catalog"}'
            
            rm -rf ./ops-controller || true
            rm -rf ./pipeline-template-catalog || true
            rm -rf ./pipeline-library || true
            rm -rf ./dev-controller || true
            
            mkdir -p ops-controller
            mkdir -p pipeline-template-catalog
            mkdir -p pipeline-library
            mkdir -p dev-controller
          ''')
          
          waitUntil {
            script {
              def status = sh script: '''curl -s -o /dev/null -w '%{http_code}' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-library/git/ref/heads/main''', returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''
            cd pipeline-library
            git init
            git config user.email "$GitHubUsername@workshop.cb-sa.io"
            git config user.name "$GitHubOrganization"
            git config pull.rebase false
            git remote add origin https://x-access-token:$GITHUB_ACCESS_TOKEN@github.com/$GitHubOrganization/pipeline-library.git
            git pull origin main
            git checkout main
            rm Jenkinsfile
            git commit -a -m 'removing Jenkinsfile from $GitHubOrganization/pipeline-library for $GitHubUsername'
            git push origin main
          ''')
          
          waitUntil {
            script {
              def status = sh script: '''curl -s -o /dev/null -w '%{http_code}' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/pipeline-template-catalog/git/ref/heads/main''', returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }
          
          sh(script: '''
            cd pipeline-template-catalog
            git init
            git config user.email "$GitHubUsername@workshop.cb-sa.io"
            git config user.name "$GitHubOrganization"
            git config pull.rebase false
            git remote add origin https://x-access-token:$GITHUB_ACCESS_TOKEN@github.com/$GitHubOrganization/pipeline-template-catalog.git
            git pull origin main
            git checkout main
            rm Jenkinsfile
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" create-pipeline-template-catalog.json
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" templates/pipeline-policies/Jenkinsfile
            git commit -a -m 'updating $GitHubOrganization/pipeline-template-catalog bundle for $GitHubUsername'
            git push origin main
          ''')
            
          waitUntil {
            script {
              def status = sh script: '''curl -s -o /dev/null -w '%{http_code}' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/ops-controller/git/ref/heads/main''', returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }

          sh(script: '''
            cd ops-controller
            git init
            git config user.email "${GitHubUsername}@workshop.cb-sa.io"
            git config user.name "${GitHubOrganization}"
            git config pull.rebase false
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/ops-controller.git
            
            git checkout -b main
            git pull origin main --allow-unrelated-histories
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" bundle.yaml
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" items.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" controller.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" controller.yaml
            sed -i "s/REPLACE_FOLDER_NAME/$controllerFolder/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" controller.yaml
            git add *
            git commit -a -m 'updating ${GitHubOrganization}/ops-controller for ${GitHubUsername}'
            git push origin main
            
            
            git fetch origin
            git checkout -b add-provisioning origin/add-provisioning
            git pull origin main --allow-unrelated-histories
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" bundle.yaml
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$AVAILABILITY_PATTERN|g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" jcasc/jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" jcasc/jenkins.yaml
            sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" jcasc/jenkins.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" items.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" controller.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$controllerName/g" controller.yaml
            sed -i "s/REPLACE_FOLDER_NAME/$controllerFolder/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" controller.yaml
            git reset --soft main
            git add *
            git commit -a -m 'add-provisioning'
            git push origin add-provisioning
            git checkout main
            
            curl \
              -X PATCH \
              -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
              -H "Accept: application/vnd.github.antiope-preview+json" \
              https://api.github.com/repos/${GitHubOrganization}/ops-controller \
              -d '{"delete_branch_on_merge":true}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 --data '{"title":"Add provisioning job","head":"add-provisioning","base":"main"}' \
                 https://api.github.com/repos/${GitHubOrganization}/ops-controller/pulls
            
            curl -X PATCH \
                 -H "Accept: application/vnd.github.v3+json" \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 https://api.github.com/repos/$GitHubOrganization/ops-controller \
                 -d '{"homepage":"'"https://$WEBHOOK_BASE_URL/$controllerFolder-$controllerName/"'"}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'Accept: application/vnd.github.nebula-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 https://api.github.com/orgs/${GitHubOrganization}/repos \
                 --data '{"name":"dev-controller","description":"Example repository to be used for dynamic provisioning of a CloudBees CI managed controller with CasC.","visibility":"public","auto_init":true,"license_template":"mit","delete_branch_on_merge":true}'
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 https://api.github.com/orgs/$GitHubOrganization/hooks \
                 --data '{"name":"web","config":{"url":"'"https://$WEBHOOK_BASE_URL/$controllerFolder-$controllerName/github-webhook/"'","content_type":"json","secret":"'"$GITHUB_WEBHOOK_SECRET"'","insecure_ssl":"0"},"events": ["check_run","check_suite","create","delete","push","pull_request","pull_request_review_comment","repository"]}'
          ''')
            
          waitUntil {
            script {
              def status = sh script: '''curl -s -o /dev/null -w '%{http_code}' -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" -H 'Accept: application/vnd.github.baptiste-preview+json' https://api.github.com/repos/${GitHubOrganization}/dev-controller/git/ref/heads/main''', returnStdout: true
              echo "returned status: ${status}"
              return (status=="200")
            }
          }

          sh(script: '''
            cd dev-controller
            git init
            git config user.email "${GitHubUsername}@workshop.cb-sa.io"
            git config user.name "${GitHubOrganization}"
            git config pull.rebase false
            git remote add origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${GitHubOrganization}/dev-controller.git
            
            git checkout -b main
            git pull origin main
            git checkout -b provision            
            
            curl https://raw.githubusercontent.com/cloudbees-days/ops-workshop-setup/main/controller.yaml > controller.yaml
            sed -i "s/REPLACE_GITHUB_USERNAME/$GitHubUsername/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" controller.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$devControllerName/g" controller.yaml
            sed -i "s/REPLACE_FOLDER_NAME/$controllerFolder/g" controller.yaml
            sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" controller.yaml
            git add *
            git commit -a -m 'adding controller.yaml for provisioning lab'
            git push -u origin provision
            
            git checkout -b add-bundle
            curl https://raw.githubusercontent.com/cloudbees-days/ops-workshop-setup/master/dev-controller/bundle.yaml > bundle.yaml
            sed -i "s/REPLACE_CONTROLLER_NAME/$devControllerName/g" bundle.yaml
            sed -i "s/REPLACE_GITHUB_ORG/$GitHubOrganization/g" bundle.yaml
            sed -i "s|REPLACE_AVAILABILITY_PATTERN|$DEV_AVAILABILITY_PATTERN|g" bundle.yaml
            git add *
            git commit -a -m 'adding bundle.yaml for provisioning lab'
            git push -u origin add-bundle
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 --data '{"title":"Provision Controller","head":"provision","base":"main"}' \
                 https://api.github.com/repos/${GitHubOrganization}/dev-controller/pulls
            
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H "authorization: Bearer $GITHUB_ACCESS_TOKEN" \
                 --data '{"title":"Add CasC Bundle","head":"add-bundle","base":"provision"}' \
                 https://api.github.com/repos/${GitHubOrganization}/dev-controller/pulls
          ''')
            
        }
        echo "creating config bundle on OC"
        container('kubectl') {
          sh "rm -rf ./${bundleName}"
          sh "mkdir -p ${bundleName}"
          sh "cp ops-controller/*.yaml ${bundleName}"
          sh "kubectl exec --namespace cbci cjoc-0 -- rm -rf /var/jenkins_home/jcasc-bundles-store/${bundleName} || true"
          sh "kubectl cp --namespace cbci ${bundleName} cjoc-0:/var/jenkins_home/jcasc-bundles-store/"
        }
        
        echo "provisioning managed controller"
        sh '''          
          sed -i "s/REPLACE_JENKINS_USER/$GitHubUsername/g" ./groovy/create-workshop-users.groovy
          sed -i "s/REPLACE_WORKSHOP_ATTENDEES_PASSWORD/$WORKSHOP_ATTENDEES_PASSWORD/g" ./groovy/create-workshop-users.groovy 
          sed -i "s/REPLACE_GITHUB_APP/$GitHubApp/g" ./groovy/create-workshop-users.groovy 
        '''
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh '''
            alias cli='java -jar jenkins-cli.jar -s http://cjoc/cjoc/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli groovy =<./groovy/create-workshop-users.groovy
            
            curl --user "$JENKINS_CLI_USR:$JENKINS_CLI_PSW" -XPOST \
              http://cjoc/cjoc/casc-items/create-items?path=/$GitHubApp \
              --data-binary @./ops-controller/controller.yaml -H 'Content-Type:text/yaml'
          '''
        }
        
        sh "sed -i \"s/REPLACE_GITHUB_ORG/$GitHubOrganization/g\" ./groovy/ops-delete-github-app-credential.groovy" 
        withCredentials([usernamePassword(credentialsId: "admin-cli-token", usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
            sh '''
                alias cli='java -jar jenkins-cli.jar -s http://operations-ops/operations-ops/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
                cli groovy =<./groovy/ops-delete-github-app-credential.groovy
            '''
        }
      }
    }
  }
}
